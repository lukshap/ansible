---
# tasks file for db
- name: Install pip packages
  pip:
    name: "{{ db.pip_packages }}"

- name: Add an Apt signing key of the repository
  apt_key:
    url: "{{ db.apt_key_url }}"
    state: present

- name: Install db repositories
  apt_repository:
    repo: "{{ db.apt_repo }}"
    state: present

- name: Update and upgrade apt packages
  become: true
  apt:
    upgrade: no
    update_cache: yes

- name: Install database
  apt:
    name: "{{ db.packages }}"
  register: db_installed

- name: Ensure the PostgreSQL service is running
  systemd:
    name: "{{ db.service }}"
    state: started
    enabled: yes

- name: Set users' passwords
  become: true
  become_user: "{{ db.db_main }}"
  postgresql_user:
    name: "{{ item.key }}"
    password: "{{ item.value }}"
  with_dict: "{{ db.users }}"
  when: db_installed.changed

- name: Set configs files
  template:
    src: "{{ item.value.template }}"
    dest: "{{ item.value.path }}"
    mode: '0600'
  with_dict: "{{ db.configs }}"
  notify: restart db

- name: Clone git repository
  git:
    repo: "{{ item.value }}"
    dest: "{{ repo_dir }}/{{ item.key }}"
    accept_hostkey: true
    force: true
  with_dict: "{{ git_repos_clone }}"

## Connect to glusterfs to backup data
- import_tasks: glusterfs_client.yml

- name: Set crontab
  cron:
    name: "{{ item.key }}"
    minute: "{{ item.value.minute }}"
    hour: "{{ item.value.hour }}"
    job: "{{ item.value.command }}"
  with_dict: "{{ cron }}"